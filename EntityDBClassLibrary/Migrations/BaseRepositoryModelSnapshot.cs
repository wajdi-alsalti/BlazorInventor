// <auto-generated />
using EntityDBClassLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityDBClassLibrary.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class BaseRepositoryModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityDBClassLibrary.Models.Bands.BandsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Bands");
                });

            modelBuilder.Entity("EntityDBClassLibrary.Models.Materials.MaterialsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SapNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("EntityDBClassLibrary.Models.SharingModels.Bands_Wagens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Band_IdId")
                        .HasColumnType("int");

                    b.Property<int>("WagenPosition")
                        .HasColumnType("int");

                    b.Property<int>("Wagen_Materials_IdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Band_IdId");

                    b.HasIndex("Wagen_Materials_IdId");

                    b.ToTable("Bands_Wagens");
                });

            modelBuilder.Entity("EntityDBClassLibrary.Models.SharingModels.Wagen_Materials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Material_IDId")
                        .HasColumnType("int");

                    b.Property<int>("Wagen_IdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Material_IDId");

                    b.HasIndex("Wagen_IdId");

                    b.ToTable("Wagen_Materials");
                });

            modelBuilder.Entity("EntityDBClassLibrary.Models.Wagen.WagenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Wagens");
                });

            modelBuilder.Entity("EntityDBClassLibrary.Models.SharingModels.Bands_Wagens", b =>
                {
                    b.HasOne("EntityDBClassLibrary.Models.Bands.BandsModel", "Band_Id")
                        .WithMany()
                        .HasForeignKey("Band_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityDBClassLibrary.Models.SharingModels.Wagen_Materials", "Wagen_Materials_Id")
                        .WithMany()
                        .HasForeignKey("Wagen_Materials_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Band_Id");

                    b.Navigation("Wagen_Materials_Id");
                });

            modelBuilder.Entity("EntityDBClassLibrary.Models.SharingModels.Wagen_Materials", b =>
                {
                    b.HasOne("EntityDBClassLibrary.Models.Materials.MaterialsModel", "Material_ID")
                        .WithMany()
                        .HasForeignKey("Material_IDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityDBClassLibrary.Models.Wagen.WagenModel", "Wagen_Id")
                        .WithMany()
                        .HasForeignKey("Wagen_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material_ID");

                    b.Navigation("Wagen_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
