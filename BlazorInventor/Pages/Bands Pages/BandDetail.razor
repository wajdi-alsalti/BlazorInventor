@page "/BandDetail/{Id}"
@inject IDataAccessLibrary<BandsModel> _bandData

<h3>@bandDetail.Number Details</h3>
<div class="container mb-3">
    <div class="float-end mt-4 ms-1">
        <ModalTransperent ButtonName="Add New Wagen">
            <ContextElements>
                <AddItemsComponent T="SingleWagenModel" ItemsToAdd="@wagensToAdd" ItemsFilter="@(x => x.Name.Contains(filterTyping, StringComparison.InvariantCultureIgnoreCase))" OnTypingFilter="FilterOutPut">
                    <ContextItemsRender>
                        @context.Name
                    </ContextItemsRender>
                    <ContextAddedItemsRender>
                        <div class="row">
                            @*name of items*@
                            <div class="col-9">
                                @context.Name
                            </div>

                            <div class="col-3">
                                @*label*@
                                <label for="wagenPosition">Wagen Position</label>
                                @*select the wagen position*@
                                <select class="form-select" @bind="@context.Position">
                                    @for (int position = 1; position < 10; position++)
                                    {
                                        <option>@position</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </ContextAddedItemsRender>
                </AddItemsComponent>
            </ContextElements>
        </ModalTransperent>
    </div>
    <EditForm Context="UpDateBand" OnValidSubmit="UpDateBand" Model=@bandDetail>
        <div>
            <h4>Wagen List Band Have</h4>
            <ul class="list-group">
                @foreach (var wagen in bandDetail.Wagens)
                {
                    <li class="list-group-item list-group-item-primary" role="button">
                        @wagen.Name at Position
                        <input class="form-control" type="number" @bind-value=@wagen.Position />
                        <button class="btn btn-danger mt-2" @onclick="(()=>DeleteWagenFromBand(wagen))">Delete</button>
                    </li>
                }
            </ul>
        </div>
        <div class="container d-flex align-items-center justify-content-center">
            <button type="submit" class="btn btn-primary mt-3">Update Band</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    private BandsModel bandDetail = new();


    /// <summary>
    /// list of the wagens we added to band
    /// </summary>
    private List<SingleWagenModel> wagensToAdd = new();


    protected override async Task OnInitializedAsync()
    {
        bandDetail = await _bandData.GetByIdAsync(Id);
    }

    private void UpDateBand(EditContext context)
    {
        List<BasicWagenModel> basicWagens = new();
        var newWagensAdded = wagensToAdd;
        var updatedInfo = (BandsModel)context.Model;

        // convert the new added wagens to basic
        foreach (var item in wagensToAdd)
        {
            basicWagens.Add(new BasicWagenModel(item));
        }

        // add all the new wagens in band
        foreach (var item in basicWagens)
        {
            updatedInfo.Wagens.Add(item);
        }

        _bandData.UpdateAsync(updatedInfo.Id,updatedInfo);
        wagensToAdd.Clear();
    }

    private void DeleteWagenFromBand(BasicWagenModel wagenModel)
    {
        bandDetail.Wagens.Remove(wagenModel);
        _bandData.UpdateAsync(bandDetail.Id, bandDetail);
    }

    string? filterTyping;

    private void FilterOutPut(string data)
    {
        filterTyping = data;
    }
}
