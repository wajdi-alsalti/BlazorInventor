@page "/"
@inject IMaterialsData materilaData

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<ToastInformation @ref=TostInfo Header="@toast.ToastHeader" Message="@toast.ToastMessage" ToastBg="@toast.ToastBG" Delay=@toast.Delay/>
<button class="btn btn-dark" @onclick="ShowToastDialog">Toast</button>


<h3>Autocomplete Demo</h3>

<div class="autocomplete w-25">
    <input @bind=selectedmaterialsName @oninput=HandleInput class="form-control filter" />
    @if (materials is not null)
    {
        <ul class="options">
            @if (materials.Any())
            {
                @foreach (var material in materials)
                {
                    <li class="option" @onclick=@(_ => SelectCustomer(material.Id))>
                        <span class="option-text">@material.Name</span>
                    </li>
                }
            }
            else
            {
                <li class="disabled option">No results</li>
            }
        </ul>
    }
</div>


@if (!string.IsNullOrWhiteSpace(selectedmaterialsName))
{
    <p class="mt-3">
        Selected materila is @selectedmaterialsName with ID <strong>@selectedmaterialsId</strong>
    </p>
}


@code{

    private ToastInformation TostInfo { get; set; }
    private ToastModel toast = new();
    private async Task ShowToastDialog()
    {
        toast.ToastMessage = "hi";
        toast.ToastHeader = "hi header";
        toast.ToastBG = "danger";
        toast.Delay = 5000;

        await TostInfo.ShowToast();
    }

    List<MaterialsModel>? materials;
    string? selectedmaterialsId;
    string? selectedmaterialsName;
    string? filter;

    async Task HandleInput(ChangeEventArgs e)
    {
        filter = e.Value?.ToString();
        if (filter?.Length > 2)
        {
            var filterMaterila = await materilaData.GetMaterialAsync();
            materials = filterMaterila.Where(material => material.Name.Contains(filter, StringComparison.InvariantCultureIgnoreCase)).ToList();
        }
        else
        {
            materials = null;
            selectedmaterialsName = selectedmaterialsId = null;
        }
    }

    void SelectCustomer(string id)
    {
        selectedmaterialsId = id;
        selectedmaterialsName = materials!.First(c => c.Id.Equals(selectedmaterialsId)).Name;
        materials = null;
    }
}